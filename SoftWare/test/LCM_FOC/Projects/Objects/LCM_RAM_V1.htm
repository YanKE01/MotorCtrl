<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\LCM_RAM_V1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\LCM_RAM_V1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu May 18 20:50:38 2023
<BR><P>
<H3>Maximum Stack Usage =        324 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SysTick_Handler &rArr; HY_TaskLoop &rArr; HY_Task_50MS_Entry &rArr; ModeUi &rArr; HY_TM1650_ShowFault &rArr; HY_TM1650_SetNumber &rArr; HY_TM1650_SetIndexNumber &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[7]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">NMI_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
 <LI><a href="#[18]">ADC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">ADC_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[18]">ADC_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[2a]">CAN_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[10]">CHIPCTRL_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[2b]">COPROC_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[15]">DMAC_CH0_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[16]">DMAC_CH1_2_Handler</a> from user_interrupt.o(i.DMAC_CH1_2_Handler) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[17]">DMAC_CH3_5_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[f]">EFLS_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[11]">EXTI0_1_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[12]">EXTI2_3_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[13]">EXTI4_15_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[8]">HardFault_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[23]">I2C0_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[24]">I2C1RVE_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[14]">LCD_ACMP0_2_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[d]">LVD_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[7]">NMI_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[6]">Reset_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[25]">SSP0_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[26]">SSP1_3RVE_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from user_interrupt.o(i.SysTick_Handler) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[2c]">SystemInit</a> from lcm32f037_rcc.o(i.SystemInit) referenced from lcm32f037_startup.o(.text)
 <LI><a href="#[1f]">TIM14_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[20]">TIM15_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[21]">TIM16_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[22]">TIM17_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[1a]">TIM1_CC_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[19]">TIM1_NON_CC_Handler</a> from user_interrupt.o(i.TIM1_NON_CC_Handler) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[1b]">TIM2_ACMP3_5_PLC_ZC_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[1c]">TIM3_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[1d]">TIM6_DAC0_2_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[1e]">TIM7_DAC3_5_PLC_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[27]">UART0_Handler</a> from user_interrupt.o(i.UART0_Handler) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[28]">UART1_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[29]">UART2_5_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[e]">WT_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[c]">WWDG_Handler</a> from lcm32f037_startup.o(.text) referenced from lcm32f037_startup.o(RESET)
 <LI><a href="#[2e]">__main</a> from __main.o(!!!main) referenced from lcm32f037_startup.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2e]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[31]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[124]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[125]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[32]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[126]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[36]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[127]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[128]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[129]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[12a]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[12b]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[12c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[12d]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[12e]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[12f]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[130]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[131]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[132]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[133]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[134]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[135]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[136]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[137]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[138]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[139]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[13a]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[13b]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3b]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[13c]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[13d]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[13e]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[13f]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[140]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[141]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[142]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[30]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[143]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[33]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[35]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[144]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[37]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; UP_vDeviceInit &rArr; US_vSystParaInitPowerup &rArr; MDS_vMotorParaCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[145]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[50]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3a]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[146]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[bf]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUi
</UL>

<P><STRONG><a name="[147]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[6]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>CAN_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>CHIPCTRL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>COPROC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMAC_CH0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMAC_CH3_5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EFLS_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI0_1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI4_15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>I2C0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2C1RVE_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>LCD_ACMP0_2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>LVD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SSP0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SSP1_3RVE_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIM14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM16_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM17_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM1_CC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM2_ACMP3_5_PLC_ZC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIM6_DAC0_2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM7_DAC3_5_PLC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>UART1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>UART2_5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WWDG_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcm32f037_startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b6]"></a>__aeabi_lmul</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOBRestarting
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOBPosObserver
</UL>

<P><STRONG><a name="[148]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>__aeabi_uldivmod</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, lludiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vNoWaterCal
</UL>

<P><STRONG><a name="[149]"></a>_ll_udiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, lludiv.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClockFreq
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetNumber
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUiPageProcess
</UL>

<P><STRONG><a name="[14b]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TaskLoop
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetFloat
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUi
</UL>

<P><STRONG><a name="[14c]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[14e]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_1S_Entry
</UL>

<P><STRONG><a name="[14f]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_1S_Entry
</UL>

<P><STRONG><a name="[3e]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[150]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[151]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vRampInit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SetPumpMechanicalSpeed
</UL>

<P><STRONG><a name="[44]"></a>_ddiv</STRONG> (Thumb, 1072 bytes, Stack size 64 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[43]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vSpdPIRegulatorIQ24Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vRampInit
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFluxWeakeningInit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurrentControllerCalc
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vConstantPowerInit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
</UL>

<P><STRONG><a name="[152]"></a>_dfix</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, dfixi.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SetPumpMechanicalSpeed
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_1S_Entry
</UL>

<P><STRONG><a name="[153]"></a>_dfixu</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_1S_Entry
</UL>

<P><STRONG><a name="[154]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SetPumpMechanicalSpeed
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_1S_Entry
</UL>

<P><STRONG><a name="[155]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SetPumpMechanicalSpeed
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_1S_Entry
</UL>

<P><STRONG><a name="[156]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>__ARM_scalbn</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, dscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vSpdPIRegulatorIQ24Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFluxWeakeningInit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurrentControllerCalc
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vConstantPowerInit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_1S_Entry
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vSpdPIRegulatorIQ24Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vRampInit
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFluxWeakeningInit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurrentControllerCalc
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vConstantPowerInit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
</UL>

<P><STRONG><a name="[157]"></a>_f2d</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vSpdPIRegulatorIQ24Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFluxWeakeningInit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurrentControllerCalc
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vConstantPowerInit
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vGlobalVariablesInit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vUdcSwitchCheck
</UL>

<P><STRONG><a name="[49]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[48]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ffixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurrentControllerCalc
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vGlobalVariablesInit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vUdcSwitchCheck
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetFloat
</UL>

<P><STRONG><a name="[158]"></a>_ffix</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, ffixi.o(.text), UNUSED)

<P><STRONG><a name="[108]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vHardwareOverCurCalcAMP
</UL>

<P><STRONG><a name="[159]"></a>_ffixu</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetFloat
</UL>

<P><STRONG><a name="[15a]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
</UL>

<P><STRONG><a name="[15b]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>__ARM_scalbnf</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, fscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vGlobalVariablesInit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vUdcSwitchCheck
</UL>

<P><STRONG><a name="[34]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[39]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[15c]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[15d]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[15e]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[15f]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>ACMP1_Cmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcm32f037_acmp.o(i.ACMP1_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vACMPconfiguration
</UL>

<P><STRONG><a name="[d6]"></a>ACMP1_Init</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, lcm32f037_acmp.o(i.ACMP1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ACMP1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vACMPconfiguration
</UL>

<P><STRONG><a name="[d7]"></a>ACMP1_SEQ_INPUT_SELECT</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lcm32f037_acmp.o(i.ACMP1_SEQ_INPUT_SELECT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ACMP1_SEQ_INPUT_SELECT
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vACMPconfiguration
</UL>

<P><STRONG><a name="[de]"></a>ADC_ChannelConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, lcm32f037_adc.o(i.ADC_ChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_ChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[df]"></a>ADC_Cmd</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, lcm32f037_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[dd]"></a>ADC_Init</STRONG> (Thumb, 306 bytes, Stack size 12 bytes, lcm32f037_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[e0]"></a>ADC_StartOfConversion</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcm32f037_adc.o(i.ADC_StartOfConversion))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[db]"></a>ADC_StructInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lcm32f037_adc.o(i.ADC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[dc]"></a>ADC_VrefintSelect</STRONG> (Thumb, 146 bytes, Stack size 12 bytes, lcm32f037_adc.o(i.ADC_VrefintSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_VrefintSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[e9]"></a>DAC_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcm32f037_dac.o(i.DAC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDAC1_5_Config
</UL>

<P><STRONG><a name="[e8]"></a>DAC_Init</STRONG> (Thumb, 270 bytes, Stack size 20 bytes, lcm32f037_dac.o(i.DAC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DAC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDAC1_5_Config
</UL>

<P><STRONG><a name="[109]"></a>DAC_SetDac_10B_Data</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcm32f037_dac.o(i.DAC_SetDac_10B_Data))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vHardwareOverCurCalcAMP
</UL>

<P><STRONG><a name="[10a]"></a>DAC_SoftwareTriggerCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcm32f037_dac.o(i.DAC_SoftwareTriggerCmd))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vHardwareOverCurCalcAMP
</UL>

<P><STRONG><a name="[16]"></a>DMAC_CH1_2_Handler</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, user_interrupt.o(i.DMAC_CH1_2_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DMAC_CH1_2_Handler &rArr; MDS_vTrack &rArr; MDS_vOBRestarting &rArr; MDS_s32Atan2 &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vWait
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vTrack
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vStop
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vPrecharge
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOpenloop
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vIdentify
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFault
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vClosedloop
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vBreak
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vAlignment
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UA_vVoltageConstruct
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UA_vIABCConstruct
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UA_vADSampleAll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lcm32f037_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[e6]"></a>DMA_Cmd</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, lcm32f037_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[e1]"></a>DMA_DeInit</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, lcm32f037_dma.o(i.DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[e3]"></a>DMA_ITConfig</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, lcm32f037_dma.o(i.DMA_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[e2]"></a>DMA_Init</STRONG> (Thumb, 230 bytes, Stack size 20 bytes, lcm32f037_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[e4]"></a>DMA_RemapConfig</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, lcm32f037_dma.o(i.DMA_RemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_RemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[e5]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcm32f037_dma.o(i.DMA_SetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[62]"></a>FLASH_LATENCY</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lcm32f037_rcc.o(i.FLASH_LATENCY))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HSI_SetSysClockTo96
</UL>

<P><STRONG><a name="[65]"></a>GPIO_Init</STRONG> (Thumb, 206 bytes, Stack size 20 bytes, lcm32f037_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa2_config
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa1_config
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa0_config
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vGPIOConfiguration
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_GpioInit
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sda_ouput
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sda_input
</UL>

<P><STRONG><a name="[f2]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, lcm32f037_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa2_config
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa1_config
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa0_config
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vGPIOConfiguration
</UL>

<P><STRONG><a name="[11c]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcm32f037_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_waitAck
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_readByte
</UL>

<P><STRONG><a name="[b8]"></a>GPIO_ResetBits</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcm32f037_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vGPIOConfiguration
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOBRestarting
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_waitAck
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_stop
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_start
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_sendByte
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_readByte
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_ack
</UL>

<P><STRONG><a name="[11a]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcm32f037_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_waitAck
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_stop
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_start
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_sendByte
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_readByte
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_ack
</UL>

<P><STRONG><a name="[60]"></a>HSI_SetSysClockTo96</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, lcm32f037_rcc.o(i.HSI_SetSysClockTo96))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HSI_SetSysClockTo96
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_LDODriverLevel
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_LATENCY
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[66]"></a>HY_HalInit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, hy_hal.o(i.HY_HalInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HY_HalInit &rArr; HY_TM1650_SetDisplay &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_GpioInit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>HY_SetPumpMechanicalSpeed</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, hy_application.o(i.HY_SetPumpMechanicalSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HY_SetPumpMechanicalSpeed &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorAppCommand
</UL>

<P><STRONG><a name="[6c]"></a>HY_TM1650_Clear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hy_display.o(i.HY_TM1650_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HY_TM1650_Clear &rArr; HY_TM1650_SetIndexNumber &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetIndexNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUiPageProcess
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUi
</UL>

<P><STRONG><a name="[6e]"></a>HY_TM1650_Read</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hy_display.o(i.HY_TM1650_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HY_TM1650_Read &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_waitAck
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_stop
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_start
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_sendByte
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_readByte
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_ScanKey
</UL>

<P><STRONG><a name="[74]"></a>HY_TM1650_ScanKey</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hy_display.o(i.HY_TM1650_ScanKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HY_TM1650_ScanKey &rArr; HY_TM1650_Read &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_50MS_Entry
</UL>

<P><STRONG><a name="[67]"></a>HY_TM1650_SetDisplay</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, hy_display.o(i.HY_TM1650_SetDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HY_TM1650_SetDisplay &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_HalInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUi
</UL>

<P><STRONG><a name="[76]"></a>HY_TM1650_SetFloat</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, hy_display.o(i.HY_TM1650_SetFloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HY_TM1650_SetFloat &rArr; HY_TM1650_SetIndexNumber &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Write
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetIndexNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUi
</UL>

<P><STRONG><a name="[7b]"></a>HY_TM1650_SetIndexLetter</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, hy_display.o(i.HY_TM1650_SetIndexLetter))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HY_TM1650_SetIndexLetter &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_ShowFault
</UL>

<P><STRONG><a name="[6d]"></a>HY_TM1650_SetIndexNumber</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, hy_display.o(i.HY_TM1650_SetIndexNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HY_TM1650_SetIndexNumber &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetNumber
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetFloat
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Clear
</UL>

<P><STRONG><a name="[7c]"></a>HY_TM1650_SetNumber</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, hy_display.o(i.HY_TM1650_SetNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HY_TM1650_SetNumber &rArr; HY_TM1650_SetIndexNumber &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetIndexNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_ShowFault
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUi
</UL>

<P><STRONG><a name="[7e]"></a>HY_TM1650_ShowFault</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, hy_display.o(i.HY_TM1650_ShowFault))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = HY_TM1650_ShowFault &rArr; HY_TM1650_SetNumber &rArr; HY_TM1650_SetIndexNumber &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetIndexLetter
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUi
</UL>

<P><STRONG><a name="[75]"></a>HY_TM1650_Write</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, hy_display.o(i.HY_TM1650_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_waitAck
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_stop
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_start
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_sendByte
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_ack
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetIndexNumber
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetIndexLetter
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetFloat
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetDisplay
</UL>

<P><STRONG><a name="[80]"></a>HY_TaskLoop</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, hy_application.o(i.HY_TaskLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = HY_TaskLoop &rArr; HY_Task_50MS_Entry &rArr; ModeUi &rArr; HY_TM1650_ShowFault &rArr; HY_TM1650_SetNumber &rArr; HY_TM1650_SetIndexNumber &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_50MS_Entry
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_1S_Entry
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_100MS_Entry
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[11d]"></a>HY_VariableInit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, hy_variable.o(i.HY_VariableInit))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>IncreaseSpeed</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hy_application.o(i.IncreaseSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IncreaseSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LimitSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_50MS_Entry
</UL>

<P><STRONG><a name="[8c]"></a>MDS_s32Atan2</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, mds_cordic.o(i.MDS_s32Atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MDS_s32Atan2 &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOBRestarting
</UL>

<P><STRONG><a name="[59]"></a>MDS_vAlignment</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mds_motorcontrol.o(i.MDS_vAlignment))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[5c]"></a>MDS_vBreak</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, mds_motorcontrol.o(i.MDS_vBreak))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[5b]"></a>MDS_vClosedloop</STRONG> (Thumb, 394 bytes, Stack size 24 bytes, mds_motorcontrol.o(i.MDS_vClosedloop))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MDS_vClosedloop &rArr; MDS_vFOC &rArr; MDS_vPIRegulatorIQ24 &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOBPosObserver
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vPWMSwitchNextPeriod
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vPWMSwitchImmediate
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFOC
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vVoltPark
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vVoltClarke
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vTrigFunctions
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurrPark
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurrClarke
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[97]"></a>MDS_vConstantPowerDQ</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, mds_fluxweakeningpowercontrol.o(i.MDS_vConstantPowerDQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MDS_vConstantPowerDQ &rArr; MDS_vPIRegulatorIQ24 &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vPIRegulatorIQ24
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[99]"></a>MDS_vConstantPowerInit</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, mds_fluxweakeningpowercontrol.o(i.MDS_vConstantPowerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MDS_vConstantPowerInit &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[9d]"></a>MDS_vCurLimit</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, mds_observer.o(i.MDS_vCurLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MDS_vCurLimit &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[114]"></a>MDS_vCurLimitInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, user_sysparainit.o(i.MDS_vCurLimitInit))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInitPowerup
</UL>

<P><STRONG><a name="[10f]"></a>MDS_vCurPIRegulatorIQ24Init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, mds_pidregulators.o(i.MDS_vCurPIRegulatorIQ24Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MDS_vCurPIRegulatorIQ24Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[8f]"></a>MDS_vCurrClarke</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mds_clarkpark.o(i.MDS_vCurrClarke))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vTrack
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOpenloop
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vClosedloop
</UL>

<P><STRONG><a name="[90]"></a>MDS_vCurrPark</STRONG> (Thumb, 54 bytes, Stack size 28 bytes, mds_clarkpark.o(i.MDS_vCurrPark))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MDS_vCurrPark
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOpenloop
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vClosedloop
</UL>

<P><STRONG><a name="[9e]"></a>MDS_vCurrentControllerCalc</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, mds_observer.o(i.MDS_vCurrentControllerCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MDS_vCurrentControllerCalc &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
</UL>

<P><STRONG><a name="[a1]"></a>MDS_vDeadTimeComp</STRONG> (Thumb, 234 bytes, Stack size 12 bytes, mds_observer.o(i.MDS_vDeadTimeComp))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MDS_vDeadTimeComp
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFOC
</UL>

<P><STRONG><a name="[94]"></a>MDS_vFOC</STRONG> (Thumb, 340 bytes, Stack size 16 bytes, mds_svpwm.o(i.MDS_vFOC))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MDS_vFOC &rArr; MDS_vPIRegulatorIQ24 &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vPIRegulatorIQ24
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vSVPWM
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vDeadTimeComp
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vPWMUpdate
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vVoltRevParkCircleLimit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vTrigFunctions
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOpenloop
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vClosedloop
</UL>

<P><STRONG><a name="[5d]"></a>MDS_vFault</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mds_motorcontrol.o(i.MDS_vFault))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MDS_vFault &rArr; US_vSysFaultProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSysFaultProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[a4]"></a>MDS_vFluxWeakening</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, mds_fluxweakeningpowercontrol.o(i.MDS_vFluxWeakening))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MDS_vFluxWeakening &rArr; MDS_vPIRegulatorIQ24 &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vPIRegulatorIQ24
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[a5]"></a>MDS_vFluxWeakeningInit</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, mds_fluxweakeningpowercontrol.o(i.MDS_vFluxWeakeningInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MDS_vFluxWeakeningInit &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[112]"></a>MDS_vIPDInit</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, user_sysparainit.o(i.MDS_vIPDInit))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[58]"></a>MDS_vIdentify</STRONG> (Thumb, 352 bytes, Stack size 32 bytes, mds_motorcontrol.o(i.MDS_vIdentify))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = MDS_vIdentify &rArr; MDS_vUdcSwitchCheck &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SATRT_OFACMP1
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vInitPosDeter
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vUdcSwitchCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[af]"></a>MDS_vIdle</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mds_motorcontrol.o(i.MDS_vIdle))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorControlState
</UL>

<P><STRONG><a name="[ab]"></a>MDS_vInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mds_motorcontrol.o(i.MDS_vInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MDS_vInit &rArr; US_vSystParaInit &rArr; MDS_vRampInit &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorControlState
</UL>

<P><STRONG><a name="[a6]"></a>MDS_vInitPosDeter</STRONG> (Thumb, 452 bytes, Stack size 20 bytes, mds_observer.o(i.MDS_vInitPosDeter))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MDS_vInitPosDeter &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vIdentify
</UL>

<P><STRONG><a name="[113]"></a>MDS_vMTPAInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, mds_fluxweakeningpowercontrol.o(i.MDS_vMTPAInit))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[ad]"></a>MDS_vMotorAppCommand</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, mds_motorcontrol.o(i.MDS_vMotorAppCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MDS_vMotorAppCommand &rArr; HY_SetPumpMechanicalSpeed &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SetPumpMechanicalSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>MDS_vMotorControlState</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, mds_motorcontrol.o(i.MDS_vMotorControlState))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MDS_vMotorControlState &rArr; MDS_vInit &rArr; US_vSystParaInit &rArr; MDS_vRampInit &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vWriteFlash
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vStart
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vInit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vIdle
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b2]"></a>MDS_vMotorParaCalc</STRONG> (Thumb, 948 bytes, Stack size 128 bytes, user_sysparainit.o(i.MDS_vMotorParaCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = MDS_vMotorParaCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurrentControllerCalc
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInitPowerup
</UL>

<P><STRONG><a name="[ec]"></a>MDS_vMotorParaReadFromHfile</STRONG> (Thumb, 266 bytes, Stack size 20 bytes, user_sysparainit.o(i.MDS_vMotorParaReadFromHfile))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MDS_vMotorParaReadFromHfile
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>

<P><STRONG><a name="[b4]"></a>MDS_vNoWaterCal</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, mds_fluxweakeningpowercontrol.o(i.MDS_vNoWaterCal))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MDS_vNoWaterCal &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[93]"></a>MDS_vOBPosObserver</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, mds_observer.o(i.MDS_vOBPosObserver))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MDS_vOBPosObserver &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOpenloop
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vClosedloop
</UL>

<P><STRONG><a name="[110]"></a>MDS_vOBPosObserverInit</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, user_sysparainit.o(i.MDS_vOBPosObserverInit))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[b7]"></a>MDS_vOBRestarting</STRONG> (Thumb, 1226 bytes, Stack size 64 bytes, mds_observer.o(i.MDS_vOBRestarting))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MDS_vOBRestarting &rArr; MDS_s32Atan2 &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_s32Atan2
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vTrack
</UL>

<P><STRONG><a name="[5a]"></a>MDS_vOpenloop</STRONG> (Thumb, 400 bytes, Stack size 24 bytes, mds_motorcontrol.o(i.MDS_vOpenloop))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MDS_vOpenloop &rArr; MDS_vFOC &rArr; MDS_vPIRegulatorIQ24 &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOBPosObserver
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vThetaGen
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFOC
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vVoltPark
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vVoltClarke
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vTrigFunctions
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurrPark
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurrClarke
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[ba]"></a>MDS_vOtherInitFromUserSetting</STRONG> (Thumb, 896 bytes, Stack size 112 bytes, user_sysparainit.o(i.MDS_vOtherInitFromUserSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MDS_vOtherInitFromUserSetting &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>

<P><STRONG><a name="[98]"></a>MDS_vPIRegulatorIQ24</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, mds_pidregulators.o(i.MDS_vPIRegulatorIQ24))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MDS_vPIRegulatorIQ24 &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFluxWeakening
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vConstantPowerDQ
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFOC
</UL>

<P><STRONG><a name="[96]"></a>MDS_vPWMSwitchImmediate</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, mds_motorcontrol.o(i.MDS_vPWMSwitchImmediate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MDS_vPWMSwitchImmediate
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vClosedloop
</UL>

<P><STRONG><a name="[95]"></a>MDS_vPWMSwitchNextPeriod</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, mds_motorcontrol.o(i.MDS_vPWMSwitchNextPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MDS_vPWMSwitchNextPeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vClosedloop
</UL>

<P><STRONG><a name="[a2]"></a>MDS_vPWMUpdate</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, mds_svpwm.o(i.MDS_vPWMUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MDS_vPWMUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFOC
</UL>

<P><STRONG><a name="[56]"></a>MDS_vPrecharge</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mds_motorcontrol.o(i.MDS_vPrecharge))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[d1]"></a>MDS_vRampGen</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, mds_thetagenerate.o(i.MDS_vRampGen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MDS_vRampGen
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[bc]"></a>MDS_vRampInit</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, mds_thetagenerate.o(i.MDS_vRampInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MDS_vRampInit &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[a0]"></a>MDS_vSVPWM</STRONG> (Thumb, 266 bytes, Stack size 20 bytes, mds_observer.o(i.MDS_vSVPWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MDS_vSVPWM &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFOC
</UL>

<P><STRONG><a name="[bd]"></a>MDS_vSpdPIRegulatorIQ24Init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, mds_pidregulators.o(i.MDS_vSpdPIRegulatorIQ24Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MDS_vSpdPIRegulatorIQ24Init &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[b0]"></a>MDS_vStart</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, mds_motorcontrol.o(i.MDS_vStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MDS_vStart
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorControlState
</UL>

<P><STRONG><a name="[55]"></a>MDS_vStop</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, mds_motorcontrol.o(i.MDS_vStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MDS_vStop &rArr; UA_u8CurrSampleOffest
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UA_u8CurrSampleOffest
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[10b]"></a>MDS_vTIMInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, user_sysparainit.o(i.MDS_vTIMInit))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSysFaultProcess
</UL>

<P><STRONG><a name="[b9]"></a>MDS_vThetaGen</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, mds_thetagenerate.o(i.MDS_vThetaGen))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOpenloop
</UL>

<P><STRONG><a name="[111]"></a>MDS_vThetaInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mds_thetagenerate.o(i.MDS_vThetaInit))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[57]"></a>MDS_vTrack</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, mds_motorcontrol.o(i.MDS_vTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MDS_vTrack &rArr; MDS_vOBRestarting &rArr; MDS_s32Atan2 &rArr; __ARM_common_ll_mulss
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOBRestarting
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurrClarke
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[8e]"></a>MDS_vTrigFunctions</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, mds_clarkpark.o(i.MDS_vTrigFunctions))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MDS_vTrigFunctions
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOpenloop
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vClosedloop
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFOC
</UL>

<P><STRONG><a name="[10e]"></a>MDS_vUdcPIRegulatorIQ24Init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, mds_pidregulators.o(i.MDS_vUdcPIRegulatorIQ24Init))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[a7]"></a>MDS_vUdcSwitchCheck</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, mds_motorcontrol.o(i.MDS_vUdcSwitchCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MDS_vUdcSwitchCheck &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vIdentify
</UL>

<P><STRONG><a name="[11e]"></a>MDS_vVSPCheck</STRONG> (Thumb, 180 bytes, Stack size 20 bytes, mds_motorcontrol.o(i.MDS_vVSPCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MDS_vVSPCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>MDS_vVoltClarke</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, mds_clarkpark.o(i.MDS_vVoltClarke))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOpenloop
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vClosedloop
</UL>

<P><STRONG><a name="[92]"></a>MDS_vVoltPark</STRONG> (Thumb, 54 bytes, Stack size 28 bytes, mds_clarkpark.o(i.MDS_vVoltPark))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MDS_vVoltPark
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOpenloop
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vClosedloop
</UL>

<P><STRONG><a name="[9f]"></a>MDS_vVoltRevParkCircleLimit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, mds_clarkpark.o(i.MDS_vVoltRevParkCircleLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MDS_vVoltRevParkCircleLimit
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFOC
</UL>

<P><STRONG><a name="[d4]"></a>MDS_vVoltageCalc</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, mds_calcvoltage.o(i.MDS_vVoltageCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MDS_vVoltageCalc
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UA_vVoltageConstruct
</UL>

<P><STRONG><a name="[5e]"></a>MDS_vWait</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, mds_motorcontrol.o(i.MDS_vWait))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[b1]"></a>MDS_vWriteFlash</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mds_motorcontrol.o(i.MDS_vWriteFlash))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorControlState
</UL>

<P><STRONG><a name="[8a]"></a>ModeUi</STRONG> (Thumb, 200 bytes, Stack size 160 bytes, hy_application.o(i.ModeUi))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = ModeUi &rArr; HY_TM1650_ShowFault &rArr; HY_TM1650_SetNumber &rArr; HY_TM1650_SetIndexNumber &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_ShowFault
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetNumber
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetFloat
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_50MS_Entry
</UL>

<P><STRONG><a name="[87]"></a>ModeUiPageProcess</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hy_application.o(i.ModeUiPageProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ModeUiPageProcess &rArr; HY_TM1650_Clear &rArr; HY_TM1650_SetIndexNumber &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_50MS_Entry
</UL>

<P><STRONG><a name="[117]"></a>NVIC_Init</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, lcm32f037_tim.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_vNVICConfiguration
</UL>

<P><STRONG><a name="[c0]"></a>OPA0_TRIM</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, lcm32f037_opa.o(i.OPA0_TRIM))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OPA0_TRIM &rArr; delay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay10us
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opa0_trim_FLAG
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opa0_trim
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Init
</UL>

<P><STRONG><a name="[c4]"></a>OPA1_TRIM</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, lcm32f037_opa.o(i.OPA1_TRIM))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OPA1_TRIM &rArr; delay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay10us
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opa1_trim_FLAG
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opa1_trim
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Init
</UL>

<P><STRONG><a name="[c7]"></a>OPA2_TRIM</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, lcm32f037_opa.o(i.OPA2_TRIM))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OPA2_TRIM &rArr; delay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay10us
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opa2_trim_FLAG
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opa2_trim
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Init
</UL>

<P><STRONG><a name="[f6]"></a>OPA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcm32f037_opa.o(i.OPA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa2_config
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa1_config
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa0_config
</UL>

<P><STRONG><a name="[ca]"></a>OPA_Init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, lcm32f037_opa.o(i.OPA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = OPA_Init &rArr; OPA2_TRIM &rArr; delay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_opa2_trim
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_opa1_trim
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_opa0_trim
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA2_TRIM
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA1_TRIM
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA0_TRIM
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa2_config
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa1_config
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa0_config
</UL>

<P><STRONG><a name="[61]"></a>PWR_LDODriverLevel</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lcm32f037_pwr.o(i.PWR_LDODriverLevel))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HSI_SetSysClockTo96
</UL>

<P><STRONG><a name="[d0]"></a>PWR_LVRCmd</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lcm32f037_pwr.o(i.PWR_LVRCmd))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[64]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, lcm32f037_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vPeriphClockCmdInit
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vGPIOConfiguration
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_GpioInit
</UL>

<P><STRONG><a name="[da]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, lcm32f037_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vPeriphClockCmdInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDAC1_5_Config
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
</UL>

<P><STRONG><a name="[d3]"></a>RCC_DeInit</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, lcm32f037_rcc.o(i.RCC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[ce]"></a>RCC_GetClockFreq</STRONG> (Thumb, 410 bytes, Stack size 24 bytes, lcm32f037_rcc.o(i.RCC_GetClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_GetClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vPeriphClockCmdInit
</UL>

<P><STRONG><a name="[89]"></a>ReduceSpeed</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hy_application.o(i.ReduceSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReduceSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LimitSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_50MS_Entry
</UL>

<P><STRONG><a name="[a8]"></a>SATRT_OFACMP1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcm32f037_acmp.o(i.SATRT_OFACMP1))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vACMPconfiguration
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vIdentify
</UL>

<P><STRONG><a name="[cf]"></a>SetSysClock</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcm32f037_rcc.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SetSysClock &rArr; delay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_LVRCmd
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay10us
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HSI_SetSysClockTo96
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>

<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 468 bytes, Stack size 24 bytes, user_interrupt.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = SysTick_Handler &rArr; HY_TaskLoop &rArr; HY_Task_50MS_Entry &rArr; ModeUi &rArr; HY_TM1650_ShowFault &rArr; HY_TM1650_SetNumber &rArr; HY_TM1650_SetIndexNumber &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSysErrorCheck
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vRampGen
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vPIRegulatorIQ24
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vNoWaterCal
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFluxWeakening
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurLimit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vConstantPowerDQ
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TaskLoop
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, lcm32f037_rcc.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemInit &rArr; RCC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>TIM1_NON_CC_Handler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, user_interrupt.o(i.TIM1_NON_CC_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM1_NON_CC_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[102]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcm32f037_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[100]"></a>TIM_BDTRConfig</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lcm32f037_tim.o(i.TIM_BDTRConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_BDTRConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[103]"></a>TIM_CCxCmd</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcm32f037_tim.o(i.TIM_CCxCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_CCxCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[104]"></a>TIM_CCxNCmd</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcm32f037_tim.o(i.TIM_CCxNCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_CCxNCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[a9]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcm32f037_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vIdentify
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_NON_CC_Handler
</UL>

<P><STRONG><a name="[116]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcm32f037_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vUserAppInit
</UL>

<P><STRONG><a name="[101]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcm32f037_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[aa]"></a>TIM_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcm32f037_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vIdentify
</UL>

<P><STRONG><a name="[f8]"></a>TIM_OC1Init</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, lcm32f037_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[fc]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcm32f037_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[f9]"></a>TIM_OC2Init</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, lcm32f037_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[fd]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcm32f037_tim.o(i.TIM_OC2PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[fa]"></a>TIM_OC3Init</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, lcm32f037_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[fe]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcm32f037_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[fb]"></a>TIM_OC4Init</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, lcm32f037_tim.o(i.TIM_OC4Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[ff]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcm32f037_tim.o(i.TIM_OC4PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[f7]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, lcm32f037_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
</UL>

<P><STRONG><a name="[27]"></a>UART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_interrupt.o(i.UART0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> lcm32f037_startup.o(RESET)
</UL>
<P><STRONG><a name="[be]"></a>UA_u8CurrSampleOffest</STRONG> (Thumb, 262 bytes, Stack size 20 bytes, user_adsample.o(i.UA_u8CurrSampleOffest))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UA_u8CurrSampleOffest
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vStop
</UL>

<P><STRONG><a name="[51]"></a>UA_vADSampleAll</STRONG> (Thumb, 228 bytes, Stack size 20 bytes, user_adsample.o(i.UA_vADSampleAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UA_vADSampleAll
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[52]"></a>UA_vIABCConstruct</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, user_adsample.o(i.UA_vIABCConstruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UA_vIABCConstruct
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[53]"></a>UA_vVoltageConstruct</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, user_adsample.o(i.UA_vVoltageConstruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UA_vVoltageConstruct &rArr; MDS_vVoltageCalc
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vVoltageCalc
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
</UL>

<P><STRONG><a name="[d5]"></a>UP_vACMPconfiguration</STRONG> (Thumb, 66 bytes, Stack size 72 bytes, user_peripheralinit.o(i.UP_vACMPconfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = UP_vACMPconfiguration &rArr; ACMP1_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SATRT_OFACMP1
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP1_SEQ_INPUT_SELECT
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP1_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP1_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>

<P><STRONG><a name="[d9]"></a>UP_vADCConfiguration</STRONG> (Thumb, 240 bytes, Stack size 112 bytes, user_peripheralinit.o(i.UP_vADCConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = UP_vADCConfiguration &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_RemapConfig
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_VrefintSelect
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>

<P><STRONG><a name="[10c]"></a>UP_vBreakEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, user_peripheralinit.o(i.UP_vBreakEnable))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[e7]"></a>UP_vDAC1_5_Config</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, user_peripheralinit.o(i.UP_vDAC1_5_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = UP_vDAC1_5_Config &rArr; DAC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>

<P><STRONG><a name="[ea]"></a>UP_vDeviceInit</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, user_peripheralinit.o(i.UP_vDeviceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = UP_vDeviceInit &rArr; US_vSystParaInitPowerup &rArr; MDS_vMotorParaCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInitPowerup
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaReadFromHfile
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vTimerConfiguration
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vPeriphClockCmdInit
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOPA012Config
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vGPIOConfiguration
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDAC1_5_Config
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vADCConfiguration
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vACMPconfiguration
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_vNVICConfiguration
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ee]"></a>UP_vGPIOConfiguration</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, user_peripheralinit.o(i.UP_vGPIOConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UP_vGPIOConfiguration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>

<P><STRONG><a name="[ef]"></a>UP_vOPA012Config</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, user_peripheralinit.o(i.UP_vOPA012Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = UP_vOPA012Config &rArr; UP_vOpa2_config &rArr; OPA_Init &rArr; OPA2_TRIM &rArr; delay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa2_config
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa1_config
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOpa0_config
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>

<P><STRONG><a name="[f3]"></a>UP_vOpa0_config</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, user_peripheralinit.o(i.UP_vOpa0_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = UP_vOpa0_config &rArr; OPA_Init &rArr; OPA2_TRIM &rArr; delay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Cmd
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOPA012Config
</UL>

<P><STRONG><a name="[f4]"></a>UP_vOpa1_config</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, user_peripheralinit.o(i.UP_vOpa1_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = UP_vOpa1_config &rArr; OPA_Init &rArr; OPA2_TRIM &rArr; delay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Cmd
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOPA012Config
</UL>

<P><STRONG><a name="[f5]"></a>UP_vOpa2_config</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, user_peripheralinit.o(i.UP_vOpa2_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = UP_vOpa2_config &rArr; OPA_Init &rArr; OPA2_TRIM &rArr; delay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Cmd
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vOPA012Config
</UL>

<P><STRONG><a name="[eb]"></a>UP_vPeriphClockCmdInit</STRONG> (Thumb, 72 bytes, Stack size 64 bytes, user_peripheralinit.o(i.UP_vPeriphClockCmdInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UP_vPeriphClockCmdInit &rArr; RCC_GetClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClockFreq
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>

<P><STRONG><a name="[f0]"></a>UP_vTimerConfiguration</STRONG> (Thumb, 490 bytes, Stack size 80 bytes, user_peripheralinit.o(i.UP_vTimerConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = UP_vTimerConfiguration &rArr; TIM_OC2Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNCmd
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxCmd
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BDTRConfig
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>

<P><STRONG><a name="[105]"></a>US_vGlobalVariablesInit</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, user_sysparainit.o(i.US_vGlobalVariablesInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = US_vGlobalVariablesInit &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[106]"></a>US_vHardwareOverCurCalcAMP</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, user_syserrorprocess.o(i.US_vHardwareOverCurCalcAMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = US_vHardwareOverCurCalcAMP &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SoftwareTriggerCmd
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SetDac_10B_Data
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInitPowerup
</UL>

<P><STRONG><a name="[d2]"></a>US_vSysErrorCheck</STRONG> (Thumb, 898 bytes, Stack size 52 bytes, user_syserrorprocess.o(i.US_vSysErrorCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = US_vSysErrorCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[a3]"></a>US_vSysFaultProcess</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, user_syserrorprocess.o(i.US_vSysFaultProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = US_vSysFaultProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vTIMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFault
</UL>

<P><STRONG><a name="[ac]"></a>US_vSystParaInit</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, user_sysparainit.o(i.US_vSystParaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = US_vSystParaInit &rArr; MDS_vRampInit &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vUdcPIRegulatorIQ24Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vThetaInit
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vSpdPIRegulatorIQ24Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vRampInit
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMTPAInit
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFluxWeakeningInit
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurPIRegulatorIQ24Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vConstantPowerInit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystStateInit
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vGlobalVariablesInit
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOBPosObserverInit
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vIPDInit
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vTIMInit
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vBreakEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vUserAppInit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vInit
</UL>

<P><STRONG><a name="[ed]"></a>US_vSystParaInitPowerup</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, user_sysparainit.o(i.US_vSystParaInitPowerup))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = US_vSystParaInitPowerup &rArr; MDS_vMotorParaCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurLimitInit
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vHardwareOverCurCalcAMP
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>

<P><STRONG><a name="[10d]"></a>US_vSystStateInit</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, user_sysparainit.o(i.US_vSystStateInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = US_vSystStateInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>

<P><STRONG><a name="[115]"></a>US_vUserAppInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user_sysparainit.o(i.US_vUserAppInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = US_vUserAppInit &rArr; US_vSystParaInit &rArr; MDS_vRampInit &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vSystParaInit
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f1]"></a>User_vNVICConfiguration</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, user_nvic.o(i.User_vNVICConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = User_vNVICConfiguration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
</UL>

<P><STRONG><a name="[8d]"></a>__ARM_common_ll_mulss</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, user_datatransform.o(i.__ARM_common_ll_mulss))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_mulss
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFluxWeakeningInit
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vPIRegulatorIQ24
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFluxWeakening
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurLimit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vConstantPowerDQ
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_s32Atan2
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOBRestarting
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOBPosObserver
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vFOC
</UL>

<P><STRONG><a name="[bb]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, user_sysparainit.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
</UL>

<P><STRONG><a name="[54]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user_interrupt.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vIdentify
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_CH1_2_Handler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorControlState
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOBRestarting
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vInitPosDeter
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vSVPWM
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_Task_50MS_Entry
</UL>

<P><STRONG><a name="[c3]"></a>delay10us</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, lcm32f037_rcc.o(i.delay10us))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = delay10us
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA2_TRIM
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA1_TRIM
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA0_TRIM
</UL>

<P><STRONG><a name="[cb]"></a>get_opa0_trim</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcm32f037_opa.o(i.get_opa0_trim))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Init
</UL>

<P><STRONG><a name="[cc]"></a>get_opa1_trim</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcm32f037_opa.o(i.get_opa1_trim))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Init
</UL>

<P><STRONG><a name="[cd]"></a>get_opa2_trim</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcm32f037_opa.o(i.get_opa2_trim))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Init
</UL>

<P><STRONG><a name="[7f]"></a>iic_ack</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, hy_softiic.o(i.iic_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = iic_ack &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sda_ouput
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Write
</UL>

<P><STRONG><a name="[119]"></a>iic_delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hy_softiic.o(i.iic_delay))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_waitAck
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_stop
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_start
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_sendByte
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_readByte
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_ack
</UL>

<P><STRONG><a name="[72]"></a>iic_readByte</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, hy_softiic.o(i.iic_readByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = iic_readByte &rArr; sda_input &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sda_input
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Read
</UL>

<P><STRONG><a name="[70]"></a>iic_sendByte</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, hy_softiic.o(i.iic_sendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sda_ouput
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Write
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Read
</UL>

<P><STRONG><a name="[6f]"></a>iic_start</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hy_softiic.o(i.iic_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = iic_start &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sda_ouput
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Write
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Read
</UL>

<P><STRONG><a name="[73]"></a>iic_stop</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hy_softiic.o(i.iic_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = iic_stop &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sda_ouput
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Write
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Read
</UL>

<P><STRONG><a name="[71]"></a>iic_waitAck</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, hy_softiic.o(i.iic_waitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = iic_waitAck
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Write
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_Read
</UL>

<P><STRONG><a name="[38]"></a>main</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, user_main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = main &rArr; UP_vDeviceInit &rArr; US_vSystParaInitPowerup &rArr; MDS_vMotorParaCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vUserAppInit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_vDeviceInit
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vVSPCheck
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorControlState
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorAppCommand
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_VariableInit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_HalInit
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[c1]"></a>opa0_trim</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcm32f037_opa.o(i.opa0_trim))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA0_TRIM
</UL>

<P><STRONG><a name="[c2]"></a>opa0_trim_FLAG</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcm32f037_opa.o(i.opa0_trim_FLAG))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA0_TRIM
</UL>

<P><STRONG><a name="[c5]"></a>opa1_trim</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcm32f037_opa.o(i.opa1_trim))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA1_TRIM
</UL>

<P><STRONG><a name="[c6]"></a>opa1_trim_FLAG</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcm32f037_opa.o(i.opa1_trim_FLAG))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA1_TRIM
</UL>

<P><STRONG><a name="[c8]"></a>opa2_trim</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcm32f037_opa.o(i.opa2_trim))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA2_TRIM
</UL>

<P><STRONG><a name="[c9]"></a>opa2_trim_FLAG</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcm32f037_opa.o(i.opa2_trim_FLAG))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA2_TRIM
</UL>

<P><STRONG><a name="[11b]"></a>sda_input</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hy_softiic.o(i.sda_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = sda_input &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_readByte
</UL>

<P><STRONG><a name="[118]"></a>sda_ouput</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hy_softiic.o(i.sda_ouput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_stop
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_start
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_sendByte
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic_ack
</UL>

<P><STRONG><a name="[107]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vHardwareOverCurCalcAMP
</UL>

<P><STRONG><a name="[11f]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vSpdPIRegulatorIQ24Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vCurrentControllerCalc
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vMotorParaCalc
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;US_vHardwareOverCurCalcAMP
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vOtherInitFromUserSetting
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDS_vUdcSwitchCheck
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetFloat
</UL>

<P><STRONG><a name="[161]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[78]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_SetFloat
</UL>

<P><STRONG><a name="[121]"></a>_frsb</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[162]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[123]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[82]"></a>HY_Task_100MS_Entry</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hy_application.o(i.HY_Task_100MS_Entry))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TaskLoop
</UL>

<P><STRONG><a name="[83]"></a>HY_Task_1S_Entry</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, hy_application.o(i.HY_Task_1S_Entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HY_Task_1S_Entry &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TaskLoop
</UL>

<P><STRONG><a name="[81]"></a>HY_Task_50MS_Entry</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, hy_application.o(i.HY_Task_50MS_Entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = HY_Task_50MS_Entry &rArr; ModeUi &rArr; HY_TM1650_ShowFault &rArr; HY_TM1650_SetNumber &rArr; HY_TM1650_SetIndexNumber &rArr; HY_TM1650_Write &rArr; iic_sendByte &rArr; sda_ouput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TM1650_ScanKey
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReduceSpeed
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUiPageProcess
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUi
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncreaseSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_TaskLoop
</UL>

<P><STRONG><a name="[8b]"></a>LimitSpeed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hy_application.o(i.LimitSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReduceSpeed
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncreaseSpeed
</UL>

<P><STRONG><a name="[63]"></a>HY_GpioInit</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, hy_hal.o(i.HY_GpioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HY_GpioInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_HalInit
</UL>

<P><STRONG><a name="[40]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[3f]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[122]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[120]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[4f]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
